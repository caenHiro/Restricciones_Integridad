SET SEARCH_PATH TO REPRESENTANTES , CASILLAS , GEOGRAFICO , PARTIDOSPOLITICOS;

/**
DROP FUNCTION CUMPLE_CONDICION_SUSTITUCION( NUMERIC(10,0),   NUMERIC(10,0)  ) ;
**/

CREATE OR REPLACE FUNCTION CUMPLE_CONDICION_SUSTITUCION(  NUMERIC(10,0),   NUMERIC(10,0) ) 
RETURNS BOOLEAN  AS $$ 
	DECLARE 
      VAR_REPRESENTANTES_CASILLA REPRESENTANTES_CASILLA;
      VAR_REPRESENTANTES_CASILLA_ACREDITADOS REPRESENTANTES_CASILLA;
      VAR_REPRESENTANTES_GENERALES REPRESENTANTES_GENERALES;
      VAR_REPRESENTANTES_GENERALES_ACREDITADOS REPRESENTANTES_GENERALES;
    BEGIN
	 IF NOT EXISTS( SELECT * FROM REPRESENTANTES.REPRESENTANTES_CASILLA WHERE ID_REPRESENTANTE_PRE = $2 )
	 	THEN 
	 		IF  EXISTS( SELECT * FROM REPRESENTANTES.REPRESENTANTES_GENERALES WHERE ID_REPRESENTANTE_PRE = $2 )
	 	 		THEN 
	 	 		 VAR_REPRESENTANTES_GENERALES := (SELECT ROW ( ID_ESTADO, ID_DISTRITO_FEDERAL ) FROM REPRESENTANTES.REPRESENTANTES_GENERAL WHERE ID_REPRESENTANTE_PRE 	= $2 );
	 	 		 VAR_REPRESENTANTES_GENERALES_ACREDITADOS := (
	 	 		 	SELECT ROW ( ID_ESTADO, ID_DISTRITO_FEDERAL ) FROM  REPRESENTANTES.REPRESENTANTES_ACREDITADOS JOIN REPRESENTANTES.REPRESENTANTES_GENERAL USING (ID_REPRESENTANTE_PRE) 
	 	 		 	WHERE ID_REPRESENTANTE_ACRE = $1 );
	 	 		 RETURN (VAR_REPRESENTANTES_GENERALES.ID_ESTADO = VAR_REPRESENTANTES_GENERALES_ACREDITADOS.ID_ESTADO) AND	
	 	 		 (VAR_REPRESENTANTES_GENERALES.ID_DISTRITO_FEDERAL = VAR_REPRESENTANTES_GENERALES_ACREDITADOS.ID_DISTRITO_FEDERAL); 
	 	 	ELSE 
	 	 	  RAISE EXCEPTION 'UPS! NO SE ENCUENTRA EL ID_REPRESENTANTE_PRE QUE DESEAS SUSTITUIR.' 
			  USING HINT = 'REVISA QUE TU ID_REPRESENTANTE_PRE QUE DESEAS SUSTITUIR EXISTA.';
			  RETURN  FALSE;
	 	 	END IF;
	 	ELSE
	 	   --RAISE NOTICE 'ES UN REPRESENTANTE ANTE CASILLA PRELIMINAR' ; 
	 	   VAR_REPRESENTANTES_CASILLA := ( SELECT ROW (  id_representante_pre,  id_representante_datos,  id_estado   ,  id_distrito_federal, 
	 	    calidad_representante,  seccion,  tipo_casilla ) FROM REPRESENTANTES.REPRESENTANTES_CASILLA WHERE ID_REPRESENTANTE_PRE = $2 );

	 	   VAR_REPRESENTANTES_CASILLA_ACREDITADOS := ( SELECT ROW (  id_representante_pre,  id_representante_datos,  id_estado   ,  id_distrito_federal, 
	 	    calidad_representante,  seccion,  tipo_casilla )  FROM  REPRESENTANTES.REPRESENTANTES_ACREDITADOS JOIN 
				REPRESENTANTES.REPRESENTANTES_CASILLA USING (ID_REPRESENTANTE_PRE , id_representante_datos )  WHERE ID_REPRESENTANTE_ACRE = $1 );

	 	    RETURN 	(VAR_REPRESENTANTES_CASILLA.ID_ESTADO = VAR_REPRESENTANTES_CASILLA_ACREDITADOS.ID_ESTADO) AND	
	 	 		(VAR_REPRESENTANTES_CASILLA.ID_DISTRITO_FEDERAL = VAR_REPRESENTANTES_CASILLA_ACREDITADOS.ID_DISTRITO_FEDERAL) AND
	 	    		(VAR_REPRESENTANTES_CASILLA.TIPO_CASILLA = VAR_REPRESENTANTES_CASILLA_ACREDITADOS.TIPO_CASILLA) AND 
	 	    		(VAR_REPRESENTANTES_CASILLA.CALIDAD_REPRESENTANTE = VAR_REPRESENTANTES_CASILLA_ACREDITADOS.CALIDAD_REPRESENTANTE)  AND 
	 	    		(VAR_REPRESENTANTES_CASILLA.SECCION = VAR_REPRESENTANTES_CASILLA_ACREDITADOS.SECCION) ;
	 END IF;	
    END;
    $$ LANGUAGE PLPGSQL;

COMMENT ON FUNCTION CUMPLE_CONDICION_SUSTITUCION(  NUMERIC(10,0),   NUMERIC(10,0)  )  IS
	'Función encargada de validar si un representante aprobado puede ser sustituido por un representnate preliminar, valida que sea del
	 mismo tipo de representante,que sean generales los 2 o que sean ante casilla los 2, por ultimo valida que tengan asiganados los
	  mismos valores para el estado, distrito, casilla, calidad y sección.'; 