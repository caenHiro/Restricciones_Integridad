SET SEARCH_PATH TO REPRESENTANTES , CASILLAS , GEOGRAFICO , PARTIDOSPOLITICOS;

/**
DROP FUNCTION CUMPLE_CONDICION_ACREDITACION( REGISTRO REPRESENTANTES_PRELIMINARES ) ;
**/

CREATE OR REPLACE FUNCTION CUMPLE_CONDICION_ACREDITACION( REGISTRO REPRESENTANTES_PRELIMINARES ) 
RETURNS BOOLEAN  AS $$ 
	DECLARE
      VAR_TIPO_CASILLA_REGISTRO VARCHAR(6) ;
      VAR_CALIDAD_REPRE_REGISTRO VARCHAR(1) ;
      VAR_SECCION_REGISTRO NUMERIC(5,0) ;
      VAR_TIPO_CASILLA_EXISTENTE VARCHAR(6) ;
      VAR_CALIDAD_REPRE_EXISTENTE VARCHAR(1) ;
      VAR_SECCION_EXISTENTE NUMERIC(5,0) ;
    BEGIN
	 IF NOT EXISTS(SELECT * FROM REPRESENTANTES_CASILLA WHERE ID_REPRESENTANTE_PRE 
	 			= REGISTRO.ID_REPRESENTANTE_PRE)
	 	THEN 
	 		IF  EXISTS(SELECT * FROM REPRESENTANTES_GENERALES WHERE ID_REPRESENTANTE_PRE 
	 			=  REGISTRO.ID_REPRESENTANTE_PRE)
	 	 		THEN 
	 	 		 RETURN REPRESENTANTES_GENERALES_DISTRITO (REGISTRO.ID_ESTADO ::INTEGER , REGISTRO.ID_DISTRITO_FEDERAL::INTEGER) ;	
	 	 	ELSE 
	 	 	  RAISE EXCEPTION 'UPS! NO SE ENCUENTRA EL ID_REPRESENTANTE_PRE QUE DESEAS ACREDITAR.' 
              USING HINT = 'REVISA QUE TU ID_REPRESENTANTE_PRE EXISTA.';
              RETURN  FALSE;
	 	 	END IF;
	 	ELSE
	 	  VAR_TIPO_CASILLA_REGISTRO := ( SELECT TIPO_CASILLA FROM REPRESENTANTES_CASILLA 
	 	  	JOIN REPRESENTANTES_PRELIMINARES USING (ID_REPRESENTANTE_PRE) WHERE   
	 	  	ID_REPRESENTANTE_PRE =  REGISTRO.ID_REPRESENTANTE_PRE);
	 	  
	 	  VAR_CALIDAD_REPRE_REGISTRO := ( SELECT CALIDAD_REPRESENTANTE FROM REPRESENTANTES_CASILLA 
	 	  	JOIN REPRESENTANTES_PRELIMINARES USING (ID_REPRESENTANTE_PRE) WHERE  
	 	  	 ID_REPRESENTANTE_PRE =  REGISTRO.ID_REPRESENTANTE_PRE);
	 	  
	 	  VAR_SECCION_REGISTRO := ( SELECT SECCION FROM REPRESENTANTES_CASILLA JOIN 
	 	  	REPRESENTANTES_PRELIMINARES USING (ID_REPRESENTANTE_PRE) WHERE   
	 	  	ID_REPRESENTANTE_PRE =  REGISTRO.ID_REPRESENTANTE_PRE);
	 	 IF  EXISTS(SELECT * FROM REPRESENTANTES_ACREDITADOS JOIN REPRESENTANTES_CASILLA 
	 	 	USING (ID_REPRESENTANTE_PRE)  WHERE CALIDAD_REPRESENTANTE = VAR_CALIDAD_REPRE_REGISTRO 
	 	  	AND TIPO_CASILLA = VAR_TIPO_CASILLA_REGISTRO AND SECCION = VAR_SECCION_REGISTRO AND ACTIVO = 'T' )
	 	 THEN
	 	   	RETURN FALSE ;
	 	 ELSE 
	 	   	RETURN TRUE ;
	 	 END IF;
	 END IF;	
    END;
    $$ LANGUAGE PLPGSQL;

COMMENT ON FUNCTION CUMPLE_CONDICION_ACREDITACION( registro REPRESENTANTES_PRELIMINARES )  IS
	'Función encargada de validar si un representante preliminar puede ser acreditado, para esto se valida 
	 dos casos,. Primer caso si es un representantes ante casilla se valida que no esté ocupado el puesto 
	 en la casilla del representante que se desea acreditar,. Segundo caso si es un representante general
	 solo se valida que no haya más de 8 representantes  generales en el distrito que se desea acreditar
	 al representante general.';